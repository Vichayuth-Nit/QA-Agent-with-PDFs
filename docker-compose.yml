services:
  backend_service:
    build: .
    container_name: fastapi_app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    env_file:
      - ./.env
    depends_on:
      - db

  db:
    image: pgvector/pgvector:0.8.0-pg17
    container_name: pgvector
    restart: always
    env_file: ./.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:


# FROM GEMINI
# services:
#   # The FastAPI application service
#   web:
#     build: .
#     ports:
#       - "8000:8000"
#     environment:
#       # Connection string for the main application database and checkpointer
#       - DATABASE_URL=postgresql+psycopg2://user:password@db:5432/appdb
#       # Connection string for the vector database
#       - VECTOR_STORE_URL=postgresql+psycopg2://user:password@vector-db:5432/vectordb
#     depends_on:
#       - db
#       - vector-db
#     volumes:
#       - .:/app # Mount the current directory to the container for development

#   # Main PostgreSQL database service for general storage and checkpointer
#   db:
#     image: postgres:15
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
#     environment:
#       - POSTGRES_USER=user
#       - POSTGRES_PASSWORD=password
#       - POSTGRES_DB=appdb
#     ports:
#       - "5432:5432" # Expose for local inspection if needed

#   # PostgreSQL service with pgvector for vector storage
#   vector-db:
#     image: pgvector/pgvector:pg16
#     volumes:
#       - pgvector_data:/var/lib/postgresql/data/
#     environment:
#       - POSTGRES_USER=user
#       - POSTGRES_PASSWORD=password
#       - POSTGRES_DB=vectordb
#     ports:
#       - "5433:5432" # Expose on a different host port to avoid conflicts

# volumes:
#   postgres_data:
#   pgvector_data:
